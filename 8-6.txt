#include <stdio.h>
#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <ctime>
#include <string.h>

using namespace std;

class BaseArray {
private:
    int capacity;
    int *mem;
protected:
    BaseArray(int capacity=100) {
        this->capacity = capacity; mem = new int [capacity];
    }
    ~BaseArray() { delete [] mem; }
    void put(int index, int val) { mem[index] = val; }
    int get(int index) { return mem[index]; }
    int getCapacity() { return capacity; }
};

class MyQueue : public BaseArray {
    int head, tail;
public:
    MyQueue(int size) : BaseArray(size) { head = 0; tail = 0;};
    void enqueue(int n) { put(tail, n); tail++;}
    int dequeue() { return get(head++);}
    int length() { return tail-head; }
    int capacity() { return getCapacity(); }
};

class MyStack : public BaseArray {
    int top;
public:
    MyStack(int size) : BaseArray(size) { top = 0; }
    void push(int n) { put(top, n); top++; }
    int pop() { return get(--top); }
    int length() { return top; }
    int capacity() { return getCapacity(); }
};

int main(){
    MyStack mStack(100);
    int n;
    cout << "스택에 삽입할 5개의 정수를 입력하라>> ";
    for(int i=0; i<5; i++){
        cin >> n;
        mStack.push(n);
    }
    cout << "스택의 용량:" << mStack.capacity() << ", 스택의 크기:" << mStack.length() << endl;
    cout << "스택의 원소를 순서대로 제거하여 출력한다>> ";
    while(mStack.length() != 0) {
        cout << mStack.pop() << ' ';
    }
    cout << endl << "스택의 현재 크기 : " << mStack.length() << endl;
}

